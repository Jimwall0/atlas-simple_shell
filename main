#include "main.h"
/**
 * main - our big function to begin the code
 * @ac: number of arguements
 * @av: pointer to inputs
 * @env: file and pathways
 * Return: returns 0 on success
*/
int main(int ac, char **av, char **env)
{
	/*char *tok;*/
	size_t size = BUFF_SIZE;
	// pid_t pid;
	char **cmd_arr;
	int i = 0;

	(void)av;
	(void)env;
	(void)ac;
	while (1)
	{
		printf("%s\n", PROMPT);
		/* Stores the users string input into a pointer*/
		cmd_arr = user_input(cmd_arr, size);
		/* forks the process for execution*/
		if (strcmp(cmd_arr[0], "exit") == 0)
		{
			// free(b);
			// free(tok);
			exit(EXIT_SUCCESS);
		}
	// 	pid = fork();
	// 	/* Child*/
	// 	if (pid == 0)
	// 	{
	// 		if (execve(cmd_arr[0], cmd_arr, env) < 0)
	// 		{
	// 			// free(b);
	// 			// free(tok);
	// 			exit(EXIT_FAILURE);
	// 		}
	// 		// free(b);
	// 		// free(tok);
	// 		exit(EXIT_SUCCESS);
	// 	}
	// 	/* Parent proccess*/
	// 	wait(NULL);
	// 	// free(b);
	// 	// free(tok);
	}

	while (cmd_arr != NULL)
	{
		printf("%s\n", cmd_arr[i]);
		i++;
	}
	return (0);
}
